{-# LANGUAGE OverloadedStrings #-}
module Language.UHIM.Dictionary.Keybind.Vim where

import Data.String

data KeyMap = KeyMap { name :: String
                     , mappings :: [Mapping]
                     }

data Mapping = Mapping { key :: String
                       , character :: String
                       , comment :: String
                       }

stringLiteralEscapeChar :: (IsString s) => Char -> s
stringLiteralEscapeChar '"' = "\\\""
stringLiteralEscapeChar '\\' = "\\\\"
stringLiteralEscapeChar '\t' = "\\t"
stringLiteralEscapeChar '\n' = "\\n"
stringLiteralEscapeChar x = fromString [x]

escapeChar :: (IsString s) => Char -> s
escapeChar '"' = "\\\""
escapeChar '\\' = "\\\\"
escapeChar ' ' = "<Space>"
escapeChar '\t' = "<Tab>"
escapeChar '\n' = "<CR>" -- TODO
escapeChar '<' = "<lt>" -- TODO
escapeChar x = fromString [x]

escape :: (IsString s) => String -> s
escape = fromString . concatMap escapeChar

emitMapping :: (IsString s, Monoid s) => Mapping -> s
emitMapping m = mconcat [ escape $ key m
                        , "\t"
                        , escape $ character m
                        , "\t"
                        , fromString $ comment m
                        , "\n"
                        ]

emit :: (IsString s, Monoid s) => KeyMap -> s
emit m = mconcat [ "\" Automatically generated by uhim-dict\n"
                 , "let b:keymap_name = \""
                 , mconcat $ map stringLiteralEscapeChar $ name m
                 , "\"\n\n"
                 , "loadkeymap\n"
                 , mconcat $ map emitMapping $ mappings m
                 , "\n"
                 ]

